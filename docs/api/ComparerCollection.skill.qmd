# ComparerCollection.skill { #modelskill.ComparerCollection.skill }

`ComparerCollection.skill(by=None, metrics=None, observed=False, **kwargs)`

Aggregated skill assessment of model(s)

## Parameters

| Name       | Type                      | Description| Default   |
|------------|---------------------------||-----------|
| `by`       | str or typing.List\[str\] | group by, by default ["model", "observation"]  - by column name - by temporal bin of the DateTimeIndex via the freq-argument (using pandas pd.Grouper(freq)), e.g.: 'freq:M' = monthly; 'freq:D' daily - by the dt accessor of the DateTimeIndex (e.g. 'dt.month') using the syntax 'dt:month'. The dt-argument is different from the freq-argument in that it gives month-of-year rather than month-of-data. - by attributes, stored in the cc.data.attrs container, e.g.: 'attrs:obs_provider' = group by observation provider or 'attrs:gtype' = group by geometry type (track or point) | `None`    |
| `metrics`  | list                      | list of modelskill.metrics (or str), by default modelskill.options.metrics.list                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             | `None`    |
| `observed` | bool                      | This only applies if any of the groupers are Categoricals.  - True: only show observed values for categorical groupers. - False: show all values for categorical groupers.                                                                                                                                                                                                                                                                                                                                                                                                                  | `False`   |

## Returns

| Type                        | Description                             |
|-----------------------------|-----------------------------------------|
| modelskill.skill.SkillTable | skill assessment as a SkillTable object |

## See Also

sel
    a method for filtering/selecting data

## Examples

```python
>>> import modelskill as ms
>>> cc = ms.match([HKNA,EPL,c2], mr)
>>> cc.skill().round(2)
               n  bias  rmse  urmse   mae    cc    si    r2
observation
HKNA         385 -0.20  0.35   0.29  0.25  0.97  0.09  0.99
EPL           66 -0.08  0.22   0.20  0.18  0.97  0.07  0.99
c2           113 -0.00  0.35   0.35  0.29  0.97  0.12  0.99
```

```python
>>> cc.sel(observation='c2', start='2017-10-28').skill().round(2)
               n  bias  rmse  urmse   mae    cc    si    r2
observation
c2            41  0.33  0.41   0.25  0.36  0.96  0.06  0.99
```

```python
>>> cc.skill(by='freq:D').round(2)
              n  bias  rmse  urmse   mae    cc    si    r2
2017-10-27  239 -0.15  0.25   0.21  0.20  0.72  0.10  0.98
2017-10-28  162 -0.07  0.19   0.18  0.16  0.96  0.06  1.00
2017-10-29  163 -0.21  0.52   0.47  0.42  0.79  0.11  0.99
```